<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.observeai.platform.realtime</groupId>
    <artifactId>neutrino</artifactId>
    <version>${revision}</version>
    <name>neutrino</name>
    <description>real-time application</description>

    <properties>
        <revision>0.0.1-SNAPSHOT</revision>
        <java.version>17</java.version>
        <spring.kafka.version>3.1.1</spring.kafka.version>
        <json.version>20240303</json.version>
        <dockerfile.plugin.version>1.4.4</dockerfile.plugin.version>
        <modelmapper.version>3.2.0</modelmapper.version>
        <docker.image.prefix>z21labs</docker.image.prefix>
        <lucene.version>7.4.0</lucene.version>
        <fuzzywuzzy.version>1.3.1</fuzzywuzzy.version>
        <aws.maven.version>1.2.0</aws.maven.version>
        <jasypt.version>3.0.5</jasypt.version>
        <config-client.version>3.0.0.5</config-client.version>
        <maven.compiler.plugin>3.12.1</maven.compiler.plugin>
        <spring.cloud.version>4.0.4</spring.cloud.version>
        <newrelic-api.version>8.0.1</newrelic-api.version>
        <shedlock.version>5.11.0</shedlock.version>
        <shedlock.mongo.version>5.11.0</shedlock.mongo.version>
        <httpclient.version>5.2.1</httpclient.version>
        <jacoco.version>0.8.10</jacoco.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>
        <authz-client.version>3.0.0.4</authz-client.version>
        <joda-time.version>2.12.7</joda-time.version>
        <protoc-maven-plugin.version>3.11.4</protoc-maven-plugin.version>
        <protobuf-serializer.version>7.7.0</protobuf-serializer.version>
        <threadpool.utils.version>3.0.0.10</threadpool.utils.version>
        <chitragupta.client.version>3.0.0.138</chitragupta.client.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <version>${spring.cloud.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>


        <dependency>
            <groupId>com.observeai.platform.config</groupId>
            <artifactId>config-client</artifactId>
            <version>${config-client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>${spring.kafka.version}</version>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-protobuf-serializer</artifactId>
            <version>${protobuf-serializer.version}</version>
        </dependency>

        <dependency>
            <groupId>com.newrelic.agent.java</groupId>
            <artifactId>newrelic-api</artifactId>
            <version>${newrelic-api.version}</version>
        </dependency>

        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-spring</artifactId>
            <version>${shedlock.version}</version>
        </dependency>

        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-provider-mongo</artifactId>
            <version>${shedlock.mongo.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>${jasypt.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${modelmapper.version}</version>
        </dependency>
        <dependency>
            <groupId>com.observeai.platform.auth</groupId>
            <artifactId>authz-client</artifactId>
            <version>${authz-client.version}</version>
        </dependency>
        <dependency>
            <groupId>com.observeai.platform.realtime</groupId>
            <artifactId>threadpool-utils</artifactId>
            <version>${threadpool.utils.version}</version>
        </dependency>
        <dependency>
            <groupId>com.observeai.platform.integration.services</groupId>
            <artifactId>chitragupta-client</artifactId>
            <version>${chitragupta.client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
    </dependencies>


    <distributionManagement>
        <repository>
            <id>artifact.release</id>
            <name>Artifact Release</name>
            <url>s3://obs-repo/neutrino/release</url>
        </repository>
        <snapshotRepository>
            <id>artifact.snapshot</id>
            <name>Snapshot Artifacts</name>
            <url>s3://obs-repo/neutrino/snapshot</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>config-client.release</id>
            <name>Commons repository</name>
            <url>s3://obs-repo/config-client/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>authz-client.release</id>
            <name>Authz client</name>
            <url>s3://obs-repo/authz-client/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>commons.release</id>
            <name>Commons repository</name>
            <url>s3://obs-repo/commons/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>confluent</id>
            <name>confluent</name>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
        <repository>
            <id>threadpool-utils.snapshot</id>
            <name>Threadpool Utils Snapshot</name>
            <url>s3://obs-repo/threadpool-utils/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- Threadpool Utils Release Repository -->
        <repository>
            <id>threadpool-utils.release</id>
            <name>Threadpool Utils Release</name>
            <url>s3://obs-repo/threadpool-utils/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>chitragupta.release</id>
            <name>Chitragupta repository</name>
            <url>s3://obs-repo/chitragupta/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <encoding.source>UTF-8</encoding.source>
                                <encoding.reporting>UTF-8</encoding.reporting>
                                <java.source>${java.version}</java.source>
                                <java.target>${java.version}</java.target>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile.plugin.version}</version>
                <configuration>
                    <repository>${docker.image.prefix}/neutrino</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/*newrelic.*</exclude>
                        <exclude>**/*newrelic-old.*</exclude>
                        <exclude>**/*dd-java-agent.*</exclude>
                        <exclude>**/*Dto.*</exclude>
                        <exclude>**/mapper/*.class</exclude>
                        <exclude>**/properties/*.class</exclude>
                        <exclude>**/context/*.class</exclude>
                        <exclude>**/controller/*.class</exclude>
                        <exclude>**/model/*.class</exclude>
                        <exclude>**/repository/*.class</exclude>
                        <exclude>**/config/*.class</exclude>
                        <exclude>**/aws/*.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>
                                <format>XML</format>
                            </formats>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report-aggregate</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.os72</groupId>
                <artifactId>protoc-jar-maven-plugin</artifactId>
                <version>${protoc-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:3.21.1</protocArtifact>
                            <inputDirectories>
                                <include>${project.basedir}/src/main/proto/</include>
                            </inputDirectories>
                            <outputTargets>
                                <outputTarget>
                                    <type>java</type>
                                    <addSources>main</addSources>
                                    <outputDirectory>${project.basedir}/target/generated-sources/</outputDirectory>
                                </outputTarget>
                            </outputTargets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>com.allogy.maven.wagon</groupId>
                <artifactId>maven-s3-wagon</artifactId>
                <version>${aws.maven.version}</version>
            </extension>
        </extensions>
    </build>

</project>
